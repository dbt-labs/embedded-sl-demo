[build-system]
requires = ["hatchling~=1.24.0", "hatch-requirements-txt>=0.4.1,<0.5.0"]
build-backend = "hatchling.build"

[project]
name = "embedded-sl-demo"
description = "A demo of dbt's Semantic Layer capabilities for embedded analytics"
authors = [
  {name = "dbt Labs"}
]
readme = "README.md"
requires-python = "~=3.12"
dynamic = [
  "dependencies", 
  "version",
  "optional-dependencies",
]

[tool.hatch.metadata.hooks.requirements_txt]
files = [
  "deps/requirements.lock",
]

[tool.hatch.metadata.hooks.requirements_txt.optional-dependencies]
dev = [
  "deps/dev.lock",
]
test = [
  "deps/test.lock"
]


[tool.hatch.version]
path = "src/__about__.py"

[tool.hatch.envs.default.scripts]
"lock" = "sh deps/lock.sh"

[tool.hatch.envs.dev]
features = [
  "dev"
]

[tool.hatch.envs.test]
features = [
  "test"
]
[tool.hatch.envs.test.scripts]
all = "pytest"

[tool.pytest.ini_options]
asyncio_mode = "auto"

[tool.pyright]
typeCheckingMode = "strict"
venv = ".venv/"

[tool.black]
line-length = 120
target-version = ["py312"]

[tool.ruff]
line-length = 120

[tool.ruff.lint]
select = [
  "E",   # Pycodestyle
  "F",   # Pyflakes
  "W",   # Whitespace
  "D",   # Pydocs
  "T20", # Print statements
  "I",   # isort
]
ignore = [
  # Missing docstring in public module -- often docs handled within classes
  "D100",
  # Missing docstring in public package -- often docs handled within files not __init__.py
  "D104",
]
# Allow autofix for all enabled rules (when `--fix`) is provided.
fixable = [
    "A", "B", "C", "D", "E", "F", "G", "I", "N", "Q", "S", "T", "W", "ANN", "ARG", "BLE", "COM", "DJ", "DTZ", "EM",
    "ERA", "EXE", "FBT", "ICN", "INP", "ISC", "NPY", "PD", "PGH", "PIE", "PL", "PT", "PTH", "PYI", "RET", "RSE", "RUF",
    "SIM", "SLF", "TCH", "TID", "TRY", "UP", "YTT"
]
unfixable = []

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.isort]
known-first-party = ["src"]

[tool.ruff.lint.per-file-ignores]
# Ignore docs for test files
"*_test.py" = ["D103"]
"tests/**" = ["D103"]
